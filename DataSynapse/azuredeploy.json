{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterName": {
      "maxLength": 10,
      "type": "string",
      "metadata": {
        "description": "String used as a base for naming resources. Must be 3-10 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
      }
    },
    "managerVMSku": {
      "defaultValue": "Standard_D3_v2",
      "allowedValues": [
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2"        
      ],
      "type": "string",
      "metadata": {
        "description": "Which instance would you like to install the Grid Manager on?"
      }
    },
    "engineVMSku": {
      "defaultValue": "Standard_D4_v2",
      "allowedValues": [
        "Standard_A0",
        "Standard_D1_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D15_v2",
        "Standard_F1",
        "Standard_F8",
        "Standard_F16"
      ],
      "type": "String",
      "metadata": {
        "description": "Which instance size would you like to install the engine on?"
      }
    },
    "instanceCount": {
      "maxValue": 100,
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (100 or less)."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password on all VMs."
      }
    },
    "DataSynapseSASToken": {
      "type": "string",
      "metadata": {
        "description": "Token provided by the PG for DataSynapse"
      }
    }
  },
  "variables": {
    "computeApiVersion": "2016-03-30",
    "networkApiVersion": "2016-03-30",
    "storageApiVersion": "2015-06-15",
    "deploymentApiVersion": "2015-01-01",
    "resourceLocation": "[resourceGroup().location]",
    "namingInfix": "[toLower(substring(concat(parameters('clusterName'), uniqueString(resourceGroup().id)), 0, 9))]",
    "longNamingInfix": "[toLower(parameters('clusterName'))]",
    "jumpBoxName": "[concat(variables('longNamingInfix'),'jb')]",
    "jumpBoxSAName": "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), 'jumpboxsa')), 'jb')]",
    "jumpBoxOSDiskName": "[concat(variables('jumpBoxName'), 'osdisk')]",
    "jumpBoxVHDContainerName": "[concat(variables('jumpBoxName'), 'vhd')]",
    "jumpBoxIPConfigName": "[concat(variables('jumpBoxName'), 'ipconfig')]",
    "jumpBoxNicName": "[concat(variables('jumpBoxName'), 'nic')]",
    "storageAccountType": "Standard_LRS",
    "newStorageAccountSuffix": "[concat(variables('namingInfix'), 'sa')]",
    "uniqueStringArray": [
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '0')))]",
      "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), '1')))]"
    ],
    "saCount": "[length(variables('uniqueStringArray'))]",
    "vhdContainerName": "[concat(variables('namingInfix'), 'vhd')]",
    "osDiskName": "[concat(variables('namingInfix'), 'osdisk')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "virtualNetworkName": "[concat(variables('namingInfix'), 'vnet')]",
    "subnetName": "[concat(variables('namingInfix'), 'subnet')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "publicIPAddressName": "publicip",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "nicName": "[concat(variables('namingInfix'), 'nic')]",
    "ipConfigName": "[concat(variables('namingInfix'), 'ipconfig')]",
    "scriptUrl": "https://raw.githubusercontent.com/tanewill/5clickTemplates/master/DataSynapse/",
    "headNodeScriptTemplateURI": "[uri(deployment().properties.templateLink.uri, 'headnode-script.json')]",
    "vmssScriptTemplateURI": "[uri(deployment().properties.templateLink.uri, 'vmss-script.json')]",
    "osType": {
      "publisher": "RedHat",
      "offer": "RHEL",
      "sku": "7.2",
      "version": "latest"
    },
    "imageReference": "[variables('osType')]",
    "vmScripts": {
      "scriptsToDownload": [
        "[concat(variables('scriptUrl'), 'master-setup.sh')]"
      ],
      "commandToExecute": ""
    }

  },
  "resources": [
  {"type": "Microsoft.Network/virtualNetworks",
    "name": "[variables('virtualNetworkName')]",
    "apiVersion": "[variables('networkApiVersion')]",
    "location": "[variables('resourceLocation')]",
    "properties": {
      "addressSpace": {
        "addressPrefixes": [
          "[variables('addressPrefix')]"
        ]
      },
      "subnets": [{
        "name": "[variables('subnetName')]",
        "properties": {
          "addressPrefix": "[variables('subnetPrefix')]"
        }
      }]
    }
  }, 
  {"type": "Microsoft.Storage/storageAccounts",
    "name": "[variables('jumpBoxSAName')]",
    "apiVersion": "[variables('storageApiVersion')]",
    "location": "[variables('resourceLocation')]",
    "properties": {
      "accountType": "[variables('storageAccountType')]"
    }
  }, 
  {"type": "Microsoft.Storage/storageAccounts",
    "name": "[concat(variables('uniqueStringArray')[copyIndex()], variables('newStorageAccountSuffix'))]",
    "apiVersion": "[variables('storageApiVersion')]",
    "location": "[variables('resourceLocation')]",
    "copy": {
      "name": "storageLoop",
      "count": "[variables('saCount')]"
    },
    "properties": {
      "accountType": "[variables('storageAccountType')]"
    }
  }, 
  {"type": "Microsoft.Network/publicIPAddresses",
    "name": "[variables('publicIPAddressName')]",
    "apiVersion": "[variables('networkApiVersion')]",
    "location": "[variables('resourceLocation')]",
    "properties": {
      "publicIPAllocationMethod": "Dynamic",
      "dnsSettings": {
        "domainNameLabel": "[variables('longNamingInfix')]"
      }
    }
  }, 
  {"type": "Microsoft.Network/networkInterfaces",
    "name": "[variables('jumpBoxNicName')]",
    "apiVersion": "[variables('networkApiVersion')]",
    "location": "[variables('resourceLocation')]",
    "properties": {
      "ipConfigurations": [{
        "name": "[variables('jumpBoxIPConfigName')]",
        "properties": {
          "privateIPAllocationMethod": "Dynamic",
          "publicIPAddress": {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
          },
          "subnet": {
            "id": "[variables('subnetRef')]"
          }
        }
      }]
    },
    "dependsOn": [
      "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
      "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
    ]
  }, 
  {"type": "Microsoft.Compute/virtualMachines",
    "name": "[variables('jumpBoxName')]",
    "apiVersion": "[variables('computeApiVersion')]",
    "location": "[variables('resourceLocation')]",    
    "dependsOn": [
      "[concat('Microsoft.Storage/storageAccounts/', variables('jumpBoxSAName'))]",
      "[concat('Microsoft.Network/networkInterfaces/', variables('jumpBoxNicName'))]"
    ],
    "properties": {
      "hardwareProfile": {
        "vmSize": "[parameters('managerVMSku')]"
      },
      "osProfile": {
        "computerName": "[variables('jumpBoxName')]",
        "adminUsername": "[parameters('adminUsername')]",
        "adminPassword": "[parameters('adminPassword')]"
      },
      "storageProfile": {
        "imageReference": "[variables('imageReference')]",
        "osDisk": {
          "name": "[variables('jumpBoxOSDiskName')]",
          "vhd": {
            "uri": "[concat('http://',variables('jumpBoxSAName'),'.blob.core.windows.net/',variables('jumpBoxVHDContainerName'),'/',variables('jumpBoxOSDiskName'),'.vhd')]"
          },
          "caching": "ReadWrite",
          "createOption": "FromImage"
        }
      },
      "networkProfile": {
        "networkInterfaces": [{
          "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('jumpBoxNicName'))]"
        }]
      },
      "diagnosticsProfile": {
        "bootDiagnostics": {
          "enabled": "false"
        }
      }
    }
  }, 
  {"type": "Microsoft.Compute/virtualMachineScaleSets",
    "sku": {
      "name": "[parameters('engineVMSku')]",
      "tier": "Standard",
      "capacity": "[parameters('instanceCount')]"
    },
    "name": "[variables('namingInfix')]",
    "apiVersion": "[variables('computeApiVersion')]",
    "location": "[variables('resourceLocation')]",
    "dependsOn": [
      "storageLoop",
      "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
    ],
    "properties": {
      "overprovision": "true",
      "upgradePolicy": {
        "mode": "Manual"
      },
      "virtualMachineProfile": {
        "storageProfile": {
          "osDisk": {
            "vhdContainers": [
              "[concat('https://', variables('uniqueStringArray')[0], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]",
              "[concat('https://', variables('uniqueStringArray')[1], variables('newStorageAccountSuffix'), '.blob.core.windows.net/', variables('vhdContainerName'))]"
            ],
            "name": "[variables('osDiskName')]",
            "caching": "ReadOnly",
            "createOption": "FromImage"
          },
          "imageReference": "[variables('imageReference')]"
        },
        "osProfile": {
          "computerNamePrefix": "[variables('namingInfix')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "networkProfile": {
          "networkInterfaceConfigurations": [{
            "name": "[variables('nicName')]",
            "properties": {
              "primary": "true",
              "ipConfigurations": [{
                "name": "[variables('ipConfigName')]",
                "properties": {
                  "subnet": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                  }
                }
              }]
            }
          }]
        },
        "extensionProfile": {
            "extensions": [
              {
                "name": "customScript",
                "properties": {
                  "publisher": "Microsoft.Compute",
                  "settings": {
                    "fileUris": "[uri(deployment().properties.templateLink.uri, 'vmss-setup.sh')]",
                    "timestamp": 12                    
                  },
                  "typeHandlerVersion": "1.8",
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "commandToExecute": "[concat('bash vmss-setup.sh ',parameters('DataSynapseSASToken'))]"
                  },
                  "type": "CustomScriptExtension"
                }
              }
            ]
          }
      }
    }
  },
  {"name": "GridManagerExtension",
    "type": "Microsoft.Resources/deployments",
    "apiVersion": "[variables('deploymentApiVersion')]",
    "dependsOn": [
      "[variables('jumpBoxName')]"
    ],
    "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('headNodeScriptTemplateURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": { "value": "[variables('jumpBoxName')]" },
          "token": { "value": "[parameters('DataSynapseSASToken')]"}
        }
      }
  }
  ],
  "outputs": 
  {
     "PublicAddress" : {
         "type" : "string",
         "value": "[uri(concat('http://',reference(variables('publicIPAddressName')).outputs.masterFQDN.value))]"
       }
  }
}
